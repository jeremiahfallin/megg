// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Activity {
  id          String   @id @default(cuid())
  profile     Profile? @relation("Activity_profile", fields: [profileId], references: [id])
  profileId   String?  @map("profile")
  month       Int?
  year        Int?
  day         Int?
  gamesPlayed Int?

  @@index([profileId])
}

model ChampionWinrate {
  id          String   @id @default(cuid())
  profile     Profile? @relation("ChampionWinrate_profile", fields: [profileId], references: [id])
  profileId   String?  @map("profile")
  champion    String   @default("")
  wins        Int?
  games       Int?
  spell1Casts Int?
  spell2Casts Int?
  spell3Casts Int?
  spell4Casts Int?

  @@index([profileId])
}

model Duo {
  id        String   @id @default(cuid())
  profile   Profile? @relation("Duo_profile", fields: [profileId], references: [id])
  profileId String?  @map("profile")
  name      String   @default("")
  wins      Int?
  losses    Int?
  winrate   String   @default("")

  @@index([profileId])
}

model Constant {
  id            String  @id @default(cuid())
  startTime     String  @default("")
  currentSeason String  @default("")
  seeding       Boolean @default(false)
}

model Event {
  id        String     @id @default(cuid())
  timestamp Int?
  position  Position[] @relation("Event_position")
}

model Game {
  id                            String                @id @default(cuid())
  matchId                       String                @unique @default("")
  gameId                        String                @default("")
  gameCreation                  String                @default("")
  gameStartTimestamp            String                @default("")
  gameEndTimestamp              String                @default("")
  duration                      Int?
  start                         String                @default("")
  gameVersion                   String                @default("")
  blueTeam                      Team?                 @relation("Game_blueTeam", fields: [blueTeamId], references: [id])
  blueTeamId                    String?               @map("blueTeam")
  redTeam                       Team?                 @relation("Game_redTeam", fields: [redTeamId], references: [id])
  redTeamId                     String?               @map("redTeam")
  source                        Source[]              @relation("Game_source")
  tournament                    String                @default("")
  gameInSeries                  Int?
  vod                           String                @default("")
  platformId                    String                @default("")
  from_PlayerEndOfGameStat_game PlayerEndOfGameStat[] @relation("PlayerEndOfGameStat_game")
  from_Team_game                Team[]                @relation("Team_game")

  @@index([blueTeamId])
  @@index([redTeamId])
}

model Objective {
  id     String  @id @default(cuid())
  team   Team?   @relation("Objective_team", fields: [teamId], references: [id])
  teamId String? @map("team")
  first  Boolean @default(false)
  kills  Int?
  type   String  @default("")

  @@index([teamId])
}

model PickBan {
  id         String  @id @default(cuid())
  team       Team?   @relation("PickBan_team", fields: [teamId], references: [id])
  teamId     String? @map("team")
  championId Int?
  pickTurn   Int?

  @@index([teamId])
}

model Player {
  id                 String                    @id @default(cuid())
  puuid              String                    @unique @default("")
  accountId          String                    @default("")
  platformId         String                    @default("")
  summonerId         String                    @default("")
  summonerName       String                    @default("")
  summonerLevel      Int?
  profileIconId      Int?
  revisionDate       String                    @default("")
  kills              PlayerKill[]              @relation("Player_kills")
  deaths             PlayerKill[]              @relation("Player_deaths")
  teams              Team[]                    @relation("Player_teams")
  profile            Profile?                  @relation("Player_profile", fields: [profileId], references: [id])
  profileId          String?                   @unique @map("profile")
  monsterKills       TeamMonsterKill[]         @relation("Player_monsterKills")
  buildingKills      TeamBuildingKill[]        @relation("Player_buildingKills")
  itemEvent          PlayerItemEvent[]         @relation("Player_itemEvent")
  endOfGameStats     PlayerEndOfGameStat[]     @relation("PlayerEndOfGameStat_player")
  snapshots          PlayerSnapshot[]          @relation("Player_snapshots")
  wardEvents         PlayerWardEvent[]         @relation("Player_wardEvents")
  skillLevelUpEvents PlayerSkillLevelUpEvent[] @relation("Player_skillLevelUpEvents")
}

model PlayerEndOfGameStat {
  id                             String      @id @default(cuid())
  player                         Player?     @relation("PlayerEndOfGameStat_player", fields: [playerId], references: [id])
  playerId                       String?     @map("player")
  game                           Game?       @relation("PlayerEndOfGameStat_game", fields: [gameId], references: [id])
  gameId                         String?     @map("game")
  perks                          PlayerRune? @relation("PlayerEndOfGameStat_perks", fields: [perksId], references: [id])
  perksId                        String?     @unique @map("perks")
  items                          PlayerItem? @relation("PlayerEndOfGameStat_items", fields: [itemsId], references: [id])
  itemsId                        String?     @map("items")
  assists                        Int?
  baronKills                     Int?
  bountyLevel                    Int?
  championExperience             Int?
  championLevel                  Int?
  championId                     Int?
  championName                   String      @default("")
  championTransform              Int?
  consumablesPurchased           Int?
  damageDealtToBuildings         Int?
  damageDealtToObjectives        Int?
  damageDealtToTurrets           Int?
  damageSelfMitigated            Int?
  deaths                         Int?
  detectorWardsPlaced            Int?
  doubleKills                    Int?
  dragonKills                    Int?
  firstBlood                     Boolean     @default(false)
  firstBloodAssist               Boolean     @default(false)
  firstTowerKill                 Boolean     @default(false)
  firstTowerAssist               Boolean     @default(false)
  gameEndedInEarlySurrender      Boolean     @default(false)
  gameEndedInSurrender           Boolean     @default(false)
  goldEarned                     Int?
  goldSpent                      Int?
  individualPosition             String      @default("")
  inhibitorKills                 Int?
  inhibitorTakedowns             Int?
  inhibitorsLost                 Int?
  item0                          Int?
  item1                          Int?
  item2                          Int?
  item3                          Int?
  item4                          Int?
  item5                          Int?
  item6                          Int?
  itemsPurchased                 Int?
  killingSprees                  Int?
  kills                          Int?
  lane                           String      @default("")
  largestCriticalStrike          Int?
  largestKillingSpree            Int?
  largestMultiKill               Int?
  longestTimeSpentLiving         Int?
  magicDamageDealt               Int?
  magicDamageDealtToChampions    Int?
  magicDamageTaken               Int?
  neutralMinionsKilled           Int?
  nexusKills                     Int?
  nexusLost                      Int?
  nexusTakedowns                 Int?
  objectivesStolen               Int?
  objectivesStolenAssists        Int?
  participantId                  Int?
  pentaKills                     Int?
  physicalDamageDealt            Int?
  physicalDamageDealtToChampions Int?
  physicalDamageTaken            Int?
  quadraKills                    Int?
  riotIdName                     String      @default("")
  riotIdTagline                  String      @default("")
  role                           String      @default("")
  sightWardsBoughtInGame         Int?
  spell1Casts                    Int?
  spell2Casts                    Int?
  spell3Casts                    Int?
  spell4Casts                    Int?
  summoner1Casts                 Int?
  summoner1Id                    Int?
  summoner2Casts                 Int?
  summoner2Id                    Int?
  summonerLevel                  Int?
  summonerName                   String      @default("")
  teamEarlySurrendered           Boolean     @default(false)
  teamId                         Int?
  teamPosition                   String      @default("")
  timeCCingOthers                Int?
  timePlayed                     Int?
  totalDamageDealt               Int?
  totalDamageDealtToChampions    Int?
  totalDamageShieldedOnTeammates Int?
  totalDamageTaken               Int?
  totalHeal                      Int?
  totalHealsOnTeammates          Int?
  totalMinionsKilled             Int?
  totalTimeCCDealt               Int?
  totalTimeSpentDead             Int?
  totalUnitsHealed               Int?
  tripleKills                    Int?
  trueDamageDealt                Int?
  trueDamageDealtToChampions     Int?
  trueDamageTaken                Int?
  turretsKilled                  Int?
  turretTakedowns                Int?
  turretsLost                    Int?
  unrealKills                    Int?
  visionScore                    Int?
  visionWardsBoughtInGame        Int?
  wardsKilled                    Int?
  wardsPlaced                    Int?
  win                            Boolean     @default(false)

  @@index([playerId])
  @@index([gameId])
  @@index([itemsId])
}

model PlayerItem {
  id                  String                @id @default(cuid())
  slot                Int?
  itemId              Int?
  name                String                @default("")
  playerEndOfGameStat PlayerEndOfGameStat[] @relation("PlayerEndOfGameStat_items")
}

model PlayerItemEvent {
  id     String   @id @default(cuid())
  player Player[] @relation("Player_itemEvent")
  type   String   @default("")
  itemId Int?
  name   String   @default("")
  undoId Int?
}

model PlayerKill {
  id     String   @id @default(cuid())
  killer Player[] @relation("Player_kills")
  victim Player[] @relation("Player_deaths")
}

model PlayerRune {
  id                  String               @id @default(cuid())
  playerEndOfGameStat PlayerEndOfGameStat? @relation("PlayerEndOfGameStat_perks")
  runeStyle           RuneStyle[]          @relation("RuneStyle_playerRunes")
  defense             Int?
  flex                Int?
  offense             Int?
}

model PlayerSkillLevelUpEvent {
  id     String   @id @default(cuid())
  player Player[] @relation("Player_skillLevelUpEvents")
  type   String   @default("")
  slot   Int?
}

model PlayerSnapshot {
  id                 String     @id @default(cuid())
  timestamp          Float?
  currentGold        Int?
  totalGold          Int?
  totalGoldDiff      Int?
  xp                 Int?
  xpDiff             Int?
  level              Int?
  cs                 Int?
  csDiff             Int?
  monstersKilled     Int?
  monstersKilledDiff Int?
  position           Position[] @relation("PlayerSnapshot_position")
  player             Player[]   @relation("Player_snapshots")
}

model PlayerWardEvent {
  id       String                       @id @default(cuid())
  player   Player[]                     @relation("Player_wardEvents")
  type     String                       @default("")
  wardType PlayerWardEventWardTypeType?
}

model Position {
  id             String           @id @default(cuid())
  event          Event[]          @relation("Event_position")
  x              Int?
  y              Int?
  playerSnapshot PlayerSnapshot[] @relation("PlayerSnapshot_position")
}

model Profile {
  id                   String            @id @default(cuid())
  update               Boolean           @default(true)
  player               Player?           @relation("Player_profile")
  lastUpdate           DateTime          @default(now())
  kills                Int?
  deaths               Int?
  assists              Int?
  kda                  String            @default("")
  winRate              String            @default("")
  csPerMinute          String            @default("")
  damagePerMinute      String            @default("")
  killsPerMinute       String            @default("")
  goldPerMinute        String            @default("")
  averageGameTime      String            @default("")
  averageTimeSpentDead String            @default("")
  totalGameTime        String            @default("")
  activity             Activity[]        @relation("Activity_profile")
  championWinrate      ChampionWinrate[] @relation("ChampionWinrate_profile")
  duos                 Duo[]             @relation("Duo_profile")
}

model SeedIdentifier {
  id         String   @id @default(cuid())
  identifier String   @unique @default("")
  type       String   @default("")
  timestamp  DateTime @default(now())
  priority   Boolean  @default(false)
  retrieved  Boolean  @default(false)
}

model Source {
  id   String @id @default(cuid())
  game Game[] @relation("Game_source")
  api  String @default("")
}

model Team {
  id                 String      @id @default(cuid())
  pickBan            PickBan[]   @relation("PickBan_team")
  game               Game?       @relation("Team_game", fields: [gameId], references: [id])
  gameId             String?     @map("game")
  players            Player[]    @relation("Player_teams")
  objectives         Objective[] @relation("Objective_team")
  teamId             Int?
  teamMatchId        String      @unique @default("")
  win                Boolean     @default(false)
  from_Game_blueTeam Game[]      @relation("Game_blueTeam")
  from_Game_redTeam  Game[]      @relation("Game_redTeam")

  @@index([gameId])
}

model TeamBuildingKill {
  id            String   @id @default(cuid())
  killer        Player[] @relation("Player_buildingKills")
  type          String   @default("")
  lane          String   @default("")
  side          String   @default("")
  towerLocation String   @default("")
}

model TeamMonsterKill {
  id      String   @id @default(cuid())
  killer  Player[] @relation("Player_monsterKills")
  type    String   @default("")
  subType String   @default("")
}

model RuneSelection {
  id          String     @id @default(cuid())
  runeStyle   RuneStyle? @relation("RuneSelection_runeStyle", fields: [runeStyleId], references: [id])
  runeStyleId String?    @map("runeStyle")
  perk        Int?
  var1        Int?
  var2        Int?
  var3        Int?

  @@index([runeStyleId])
}

model RuneStyle {
  id            String          @id @default(cuid())
  playerRunes   PlayerRune?     @relation("RuneStyle_playerRunes", fields: [playerRunesId], references: [id])
  playerRunesId String?         @map("playerRunes")
  selection     RuneSelection[] @relation("RuneSelection_runeStyle")
  description   String          @default("")
  style         Int?

  @@index([playerRunesId])
}

enum PlayerWardEventWardTypeType {
  YELLOW_TRINKET
  CONTROL_WARD
  SIGHT_WARD
  YELLOW_TRINKET_UPGRADE
  BLUE_TRINKET
  TEEMO_MUSHROOM
  VISION_WARD
  UNDEFINED
}